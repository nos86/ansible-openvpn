---
# tasks file for netzwirt.openvpn

- name: create group for open vpn
  group: 
    name: "{{openvpn_group}}"
    system: yes
    state: present


- name: create user for open vpn
  user: 
    name: "{{openvpn_user}}" 
    comment: "Open VPN"
    group: "{{openvpn_group}}"
    system: yes
    state: present
    createhome: no


- name: installing packages with apt
  import_tasks: install.apt.yml
  when: ansible_os_family == 'Debian'


- name: create openvpn directories
  file: 
    path: "{{item}}" 
    state: directory 
    mode: 0750
    owner: root
    group: "{{openvpn_group}}"
  with_items:
    - "{{ openvpn_keydir }}"
    - "{{ openvpn_configdir }}"
    - "{{ openvpn_clientconfig_dir }}"
    - "{{ openvpn_client_certificates_dir }}"


- name: generate diffie hellman params
  shell: openssl dhparam -out {{openvpn_keydir}}/dh{{openvpn_key_size}}.pem {{openvpn_key_size}}
    chdir={{openvpn_keydir}}
    creates=dh{{openvpn_key_size}}.pem
    executable=/bin/bash


- name: generate tls-auth key
  command: openvpn --genkey --secret {{openvpn_tls_auth_key}}
    chdir={{openvpn_keydir}}
    creates={{openvpn_tls_auth_key}}
  when: openvpn_is_pki_master


- name: copy x509 stuff to slave
  import_tasks: 'copy-x509.yml'
  when: openvpn_is_pki_master == False


- name: create openvpn server config
  template:
    dest: "{{openvpn_configdir}}/server.conf"
    src: server.conf.j2
  notify: 
  - openvpn restart


- name: Ensure OpenVPN is started
  service: 
    name: openvpn 
    state: started 
    enabled: yes


- include: client.configs.yml
  when: openvpn_is_pki_master


- name: create clientconfig (ccd)
  template:
    src: ccd.tpl.j2
    dest: "{{openvpn_clientconfig_dir}}/{{ item.fullname }} <{{ item.email }}>"
  with_items: "{{ Â openvpn_users  }}"
  when: item.ip_addr is defined


- name: fetch x509 items
  fetch: 
    src: "{{ item }}"
    dest: "{{ openvpn_local_storage_path }}/x509/{{ item.split('/').pop()  }}"
    flat: yes
  with_items: 
  - "{{ openvpn_ca_cert }}"
  - "{{ openvpn_server_cert }}"
  - "{{ openvpn_server_key }}"
  - "{{ openvpn_ca_crl_list }}"
  - "{{ openvpn_tls_auth_key }}"
  when: openvpn_fetch_x509

- name: Configure iptables
  iptables: table="nat" chain="POSTROUTING" source="{{ openvpn_fw_addr }}" out_interface="{{ ansible_default_ipv4.interface }}" jump="MASQUERADE"
  when: openvpn_configure_iptables
